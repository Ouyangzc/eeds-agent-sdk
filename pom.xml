<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.elco</groupId>
    <artifactId>eeds-agent-sdk</artifactId>
    <version>1.1.2-SNAPSHOT</version>

    <description>宜科边缘服务代理端SDK</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <logback-version>1.3.0</logback-version>
        <commons.io.version>2.6</commons.io.version>
        <hutools.version>5.1.0</hutools.version>
        <fastjson.version>1.2.76</fastjson.version>
        <httpclient.version>4.5.10</httpclient.version>
        <quartz.version>2.3.2</quartz.version>
    </properties>

    <dependencies>
        <!--日志框架logback-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-version}</version>
        </dependency>
        <!--io操作-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>
        <!--hutool工具类-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutools.version}</version>
        </dependency>
        <!--fastjson-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!--宜科nats插件-->
        <dependency>
            <groupId>com.elco</groupId>
            <artifactId>eeds-agent-mq-nats-plugin</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <!-- httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.13</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.27</version>
        </dependency>

        <!--quartz定时任务-->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>


        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>2.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.iiot.core</groupId>
            <artifactId>timewheel</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>
    <distributionManagement>
        <repository>
            <id>release</id>
            <name>Release Deploy</name>
            <url>http://192.168.0.170:8091/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>maven-public</id>
            <name>Snapshot Deploy</name>
            <url>http://192.168.0.170:8091/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.5.3</version>
                <executions>
                    <execution>
                        <!--打包的时候开始混淆-->
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <proguardVersion>7.2.1</proguardVersion>
                    <injar>${project.build.finalName}.jar</injar>
                    <!--输出的jar-->
                    <outjar>${project.build.finalName}.jar</outjar>
                    <!--是否混淆-->
                    <obfuscate>true</obfuscate>
                    <proguardInclude>${basedir}/proguard.cfg</proguardInclude>

                    <options>
                        <!--默认开启，不做收缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>
                        <!--默认是开启的，这里关闭字节码级别的优化-->
                        <option>-dontoptimize</option>
                        <!--对于类成员的命名的混淆采取唯一策略-->
                        <option>-useuniqueclassmembernames</option>
                        <!--混淆时不生成大小写混合的类名，默认是可以大小写混合-->
                        <option>-dontusemixedcaseclassnames</option>
                        <!--混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代-->
                        <option>-adaptclassstrings</option>

                        <!--对异常、注解信息在runtime予以保留，不然影响springboot启动-->
                        <option>-keepattributes
                            Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
                        </option>

                        <!--此选项将保存接口中的所有原始名称（不混淆）-->
                        <option>-keepnames interface ** { *; }</option>
                        <!--此选项将保存所有软件包中的所有原始接口文件（不进行混淆）-->
                        <!--<option>-keep interface * extends * { *; }</option>-->

                        <!--此选项将保留所有原始方法参数,controller如果参数也混淆会导致传参映射不上  -->
                        <option>-keepparameternames</option>

                        <!--保留枚举成员及方法-->
                        <option>-keepclassmembers enum * { *; }</option>

                        <!--不混淆所有类,保存原始定义的注释-->
                        <!--<option>-keepclassmembers class * {
                            @org.springframework.context.annotation.Bean *;
                            @org.springframework.beans.factory.annotation.Autowired *;
                            @org.springframework.beans.factory.annotation.Value *;
                            @org.springframework.stereotype.Service *;
                            @org.springframework.stereotype.Component *;
                            }
                        </option>-->

                        <!--忽略warn消息-->
                        <option>-ignorewarnings</option>
                        <!--忽略note消息-->
                        <option>-dontnote</option>
                    </options>
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jsse.jar</lib>
                    </libs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.guardsquare</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>7.2.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
